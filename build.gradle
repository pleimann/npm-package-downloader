buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'com.asynchrony.tools'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile('com.fasterxml.jackson.core:jackson-databind')

    compile('org.apache.commons:commons-compress:1.15')
    compile('com.github.yuchi:npm-semver:1.0.0')
    compile('com.google.guava:guava:23.3-jre')

    compileOnly('org.projectlombok:lombok')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

idea {
	project {
		ipr {
			withXml { provider ->
				// Get XML as groovy.util.Node to work with.
				def projectXml = provider.asNode()

				// Find compiler configuration component.
				def compilerConfiguration = projectXml.component.find { component ->
					component.'@name' == 'CompilerConfiguration'
				}

				// Replace current annotationProcessing
				// that is part of the compiler configuration.
				def currentAnnotationProcessing = compilerConfiguration.annotationProcessing
				currentAnnotationProcessing.replaceNode {
					annotationProcessing {
						profile(name: 'Default', default: true, enabled: true) {
							processorPath(useClasspath: true)
						}
					}
				}
			}
		}
	}
}
